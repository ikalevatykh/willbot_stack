<?xml version="1.0"?>
<launch>
  <!-- GDB functionality -->
  <arg name="debug" default="false" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <arg     if="$(arg debug)" name="launch_prefix" value="gdb --ex run --args" />

  <arg name="arm_name" default="arm" />
  <arg name="robot_ip"/>
  <arg name="tf_prefix" default=""/>
  <arg name="headless_mode" default="true"/>
  <arg name="use_tool_communication" default="false"/>
  <arg name="urscript_file" default="$(find ur_robot_driver)/resources/ros_control.urscript"/>
  <arg name="controllers" default="joint_state_controller scaled_pos_traj_controller speed_scaling_state_controller force_torque_sensor_controller"/>
  <arg name="stopped_controllers" default="pos_traj_controller joint_group_vel_controller"/>
  <arg name="controller_config_file" default="$(find ur_robot_driver)/config/ur5_controllers.yaml"/>
  <arg name="kinematics_config" default="$(find willbot_description)/config/ur5_paris.yaml"/>
  <arg name="rtde_output_recipe_file" default="$(find ur_robot_driver)/resources/rtde_output_recipe.txt"/>
  <arg name="rtde_input_recipe_file" default="$(find ur_robot_driver)/resources/rtde_input_recipe.txt"/>

  <group ns="$(arg arm_name)">
    <!-- Load hardware interface -->
    <node name="ur_hardware_interface" pkg="ur_robot_driver" type="ur_robot_driver_node" output="screen" launch-prefix="$(arg launch_prefix)" required="true">
      <param name="robot_ip" type="str" value="$(arg robot_ip)"/>
      <param name="headless_mode" value="$(arg headless_mode)"/>
      <param name="tf_prefix" value="$(arg tf_prefix)"/>
      <rosparam command="load" file="$(arg kinematics_config)" />
      <param name="script_file" value="$(arg urscript_file)"/>
      <param name="output_recipe_file" value="$(arg rtde_output_recipe_file)"/>
      <param name="input_recipe_file" value="$(arg rtde_input_recipe_file)"/>
      <param name="use_tool_communication" value="$(arg use_tool_communication)"/>
    </node>

    <!-- Load controller settings -->
    <rosparam file="$(arg controller_config_file)" command="load"/>

    <!-- spawn controller manager -->
    <node name="ros_control_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
      output="screen" args="$(arg controllers)" />

    <!-- load other controller -->
    <node name="ros_control_stopped_spawner" pkg="controller_manager" type="spawner" respawn="false"
      output="screen" args="--stopped $(arg stopped_controllers)" />

    <node name="controller_stopper" pkg="controller_stopper" type="node" respawn="false" output="screen">
      <remap from="robot_running" to="ur_hardware_interface/robot_program_running"/>
      <rosparam param="consistent_controllers">
        - "joint_state_controller"
        - "speed_scaling_state_controller"
        - "force_torque_sensor_controller"
      </rosparam>
    </node>

    <!-- Make sure to start this in the namespace of the hardware interface -->
    <node ns="ur_hardware_interface" name="ur_robot_state_helper" pkg="ur_robot_driver" type="robot_state_helper" respawn="false" output="screen"/>
  </group>
</launch>

